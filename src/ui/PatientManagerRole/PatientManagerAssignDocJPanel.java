/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PatientManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RequestDoctor;
import Business.WorkQueue.WorkRequest;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amishagupta
 */
public class PatientManagerAssignDocJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientManagerAssignDocJPanel
     */
     private UserAccount useraccount;
       private EcoSystem system;
    public PatientManagerAssignDocJPanel(JPanel userProcessContainer,Enterprise enterprise, UserAccount account, EcoSystem system) {
        initComponents();
        this.useraccount=account;
        this.system=system;
        populateRequestTable();
        SubmittedrequestsJTable.setRowHeight(25);
        SubmittedrequestsJTable.getTableHeader().setDefaultRenderer(new HeaderColor());
    }
     public class HeaderColor extends DefaultTableCellRenderer {
        public HeaderColor() {
            setOpaque(true);
        }
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused, int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);         
           setBackground(new java.awt.Color(74,122,193));
            return this;
        }
    }
  public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) SubmittedrequestsJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : system.getWorkQueue().getWorkRqstList()) {
            if (workRequest instanceof RequestDoctor){          
                    Object[] row = new Object[9];
                            row[0] = workRequest;
                            row[1] = ((RequestDoctor) workRequest).getRegisteredUser().getEmployee().getName();
                            row[2] = ((RequestDoctor) workRequest).getPatientManager()==null?"Not Assigned":((RequestDoctor) workRequest).getPatientManager().getEmployee().getName();
                            row[3] = ((RequestDoctor) workRequest).getDoctor()==null?"Not Assigned":((RequestDoctor) workRequest).getDoctor().getEmployee().getName();
                            row[4] = ((RequestDoctor) workRequest).getNurUserAccount()==null?"Not Assigned":((RequestDoctor) workRequest).getNurUserAccount().getEmployee().getName();
                            row[5] = ((RequestDoctor) workRequest).getHospitalAssigned()==null?"Hospital Not Assigned":((RequestDoctor) workRequest).getHospitalAssigned();
                            row[6] = ((RequestDoctor) workRequest).getDoctorMessage()==null?"No Comments":((RequestDoctor) workRequest).getDoctorMessage();
                            row[7] = ((RequestDoctor) workRequest).getPatientmanagerComment()==null?"No Comments":((RequestDoctor) workRequest).getPatientmanagerComment();
                            row[8] = ((RequestDoctor) workRequest).getRequeststatus();
                            model.addRow(row);
               
            }
            
            
        }
   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DoctorScrollPane = new javax.swing.JScrollPane();
        SubmittedrequestsJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        BtnAssign = new javax.swing.JButton();
        lblComment = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentTxtArea = new javax.swing.JTextArea();

        SubmittedrequestsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Requester's Name", "Patient Manager", "Doctor Assigned", "Nurse Assigned", "Hospital Assigned", "Doctor's Comments", "Patient Manager Comment", "Request Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SubmittedrequestsJTable.setRequestFocusEnabled(false);
        SubmittedrequestsJTable.setSelectionBackground(new java.awt.Color(235, 227, 126));
        DoctorScrollPane.setViewportView(SubmittedrequestsJTable);

        jLabel1.setFont(new java.awt.Font(".SF NS Text", 1, 18)); // NOI18N
        jLabel1.setText("User's Requests");

        BtnAssign.setText("Assign to Me");
        BtnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAssignActionPerformed(evt);
            }
        });

        lblComment.setText("Enter Comments");

        commentTxtArea.setColumns(20);
        commentTxtArea.setRows(5);
        jScrollPane1.setViewportView(commentTxtArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(DoctorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(418, 418, 418)
                        .addComponent(lblComment)
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(BtnAssign)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DoctorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnAssign)
                    .addComponent(lblComment)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(236, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAssignActionPerformed
        // TODO add your handling code here:
          int selectedRow = SubmittedrequestsJTable.getSelectedRow();
         if (selectedRow < 0){
              JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
         }
         else if (commentTxtArea.getText()==null){
             JOptionPane.showMessageDialog(null, "Please enter Comments!");
         }
         else{
        RequestDoctor request1 = (RequestDoctor)SubmittedrequestsJTable.getValueAt(selectedRow, 0);
        request1.setPatientManager(useraccount);
        request1.setPatientmanagerComment(commentTxtArea.getText());
        request1.setStatus("Patient Manager Assigned");       
        populateRequestTable();
        JOptionPane.showMessageDialog(null, "This Request has been assigned to you successfuuly");
         }
            
        
    }//GEN-LAST:event_BtnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAssign;
    private javax.swing.JScrollPane DoctorScrollPane;
    private javax.swing.JTable SubmittedrequestsJTable;
    private javax.swing.JTextArea commentTxtArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComment;
    // End of variables declaration//GEN-END:variables
}
